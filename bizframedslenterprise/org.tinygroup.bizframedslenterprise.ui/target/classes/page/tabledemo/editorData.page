#!set(activeTitle="修改资料",activeMenuId="9.9")
#@tinyForm("thisform" "url" "post" {"class":"xxxxxxxxx"})
	#@elementItem()
		#@colLabel("col-2")登录名：#end
		#@formControlDiv("col-7")
			#tinyInput("text" "username" ""{"placeholder":"4~16个字符，字母/中文/数字/下划线","datatype":"*4-16","nullmsg":"登录名不能为空！","id":"username","class":"input-text"})
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@colLabel("col-2")姓名：#end
		#@formControlDiv("col-7")
			#tinyInput("text" "name" ""{"placeholder":"请输入姓名","datatype":"*2-16","nullmsg":"姓名不能为空！","id":"name","class":"input-text"})
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@colLabel("col-2")邮箱：#end
		#@formControlDiv("col-7")
			#tinyInput("text" "email" ""{"placeholder":"@","datatype":"e","nullmsg":"请输入邮箱！","id":"email","class":"input-text"})
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@colLabel("col-2")头像：#end
		#@formControlDiv("col-7")
			#tinyUploadInput("inputName" "" {"placeholder":"可直接输入地址，也可点击下图标进行上传"})
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@colLabel("col-2")状态：#end
		#@formControlDiv("skin-minimal col-7")
			#@tinyRadio("state" "enable" "enable")启用#end
			#@tinyRadio("state" "noNnable" "enable")未启用#end
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@colLabel("col-2")关联人员：#end
		#@formControlDiv("col-7")
			#tinyInput("text" "associatedName" ""{"placeholder":"请输入关联名","datatype":"*2-16","nullmsg":"关联人员不能为空！","id":"associatedName","class":"input-text"})
		#end
		#@validateDiv("col-3")#end
	#end
	#@elementItem()
		#@div(divClass="col-10 col-offset-2 form-inline")
			#tinyInput("submit" "submitbtn" "保存" {"class":"btn btn-primary"})
		#end
	#end
#end

<script type="text/javascript">
$(function(){

  $("form[name=thisform").attr("action",'#link("/Validform_post.html")');
  $("form[name=thisform").Validform({
	tiptype:2,
	usePlugin:{
		  //datepicker:{},//日期控件校验;
		  passwordstrength:{
			 minLen:6,//设置密码长度最小值，默认为0;
			 maxLen:18,//设置密码长度最大值，默认为30;
			 trigger:function(obj,error){
				//该表单元素的keyup和blur事件会触发该函数的执行;
				//obj:当前表单元素jquery对象;
				//error:所设密码是否符合验证要求，验证不能通过error为true，验证通过则为false;
				//console.log(error);
				if(error){
				 obj.parent().find(".Validform_checktip").show();
				 obj.parent().find(".passwordStrength").hide();
				}else{
				 obj.parent().find(".passwordStrength").show();
				}
			 }
		  }
	},
	ajaxPost:true,
	beforeCheck:function(curform){
		//在表单提交执行验证之前执行的函数，curform参数是当前表单对象。
		//这里明确return false的话将不会继续执行验证操作;
	},
	beforeSubmit:function(curform){
		//在验证成功后，表单提交前执行的函数，curform参数是当前表单对象。
		//这里明确return false的话表单将不会提交;
	},
	callback:function(data){
		if(data.status=="y"){
			setTimeout(function(){
				$.Hidemsg(); //公用方法关闭信息提示框;显示方法是$.Showmsg("message goes here.");
			},2000);
		}
		//返回数据data是json对象，{"info":"demo info","status":"y"}
		//info: 输出提示信息;
		//status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在Validform_post.html文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;
		//你也可以在Validform_post.html文件返回更多信息在这里获取，进行相应操作；
		//ajax遇到服务端错误时也会执行回调，这时的data是{ status:**, statusText:**, readyState:**, responseText:** }；

		//这里执行回调操作;
		//注意：如果不是ajax方式提交表单，传入callback，这时data参数是当前表单对象，回调函数会在表单验证全部通过后执行，然后判断是否提交表单，如果callback里明确return false，则表单不会提交，如果return true或没有return，则会提交表单。
	}
 });
});
</script>