#@tinyForm("thisform" "" "" {"class":"test"})
    #seltreeInit("treeSel2" "getOrganizations.servicejson" parentId "organizationName" {"idKey":"organizationId","pIdKey":"parentId"})
    #@elementItem()
        #@colLabel()机构名称：#end
        #@formControlDiv("col-8")
            #tinyInput("text" "organizationName" ""{"placeholder":"请输入机构名称","datatype":"*","nullmsg":"机构名称不能为空","id":"name","class":
                "input-text"})
        #end
        #@validateDiv("col-2")#end
    #end

    #@elementItem()
        #@colLabel("col-2")所属机构：#end
        #@formControlDiv("col-10")
        <div class="selectTree" style="clear:both">
            <ul class="clearfix">
                <li class="title col-9"><input id="treeSel2_dropSel" type="text" readonly value="" style="width:95%;"/>
                <li class="col-2"><a id="treeSel2_menuBtn" class="menuBtn" href="javascript://">选择</a></li>
            </ul>

            <div id="treeSel2_menuContent" class="menuContent" style="display:none;width:71%;clear:both;margin-left:0%">
            ##			<ul id="treeSel" class="ztree" style=""></ul>
						#@selZtree("treeSel2")#end
            </div>
        </div>
        #end
        #@validateDiv("col-3")#end
    #end
#end
<style>.zTreeDemoBackground ul.ztree{max-height:200px;}</style>
    <script type="text/javascript">

        $(function () {
        ##        $("form[name=thisform]").attr("action", '#link("/Validform_post.html")');
            $("form[name=thisform]").Validform({
                tiptype: 2,
                usePlugin: {
                    //datepicker:{},//日期控件校验;
                    passwordstrength: {
                        minLen: 6,//设置密码长度最小值，默认为0;
                        maxLen: 18,//设置密码长度最大值，默认为30;
                        trigger: function (obj, error) {
                            //该表单元素的keyup和blur事件会触发该函数的执行;
                            //obj:当前表单元素jquery对象;
                            //error:所设密码是否符合验证要求，验证不能通过error为true，验证通过则为false;
                            //console.log(error);
                            if (error) {
                                obj.parent().find(".Validform_checktip").show();
                                obj.parent().find(".passwordStrength").hide();
                            } else {
                                obj.parent().find(".passwordStrength").show();
                            }
                        }
                    }
                },
                ajaxPost: true,
                beforeCheck: function (curform) {
                    //在表单提交执行验证之前执行的函数，curform参数是当前表单对象。
                    //这里明确return false的话将不会继续执行验证操作;
                },
                beforeSubmit: function (curform) {
                    //return false;
                    //在验证成功后，表单提交前执行的函数，curform参数是当前表单对象。
                    //这里明确return false的话表单将不会提交;
                    var zTree = $.fn.zTree.getZTreeObj("treeSel2");
                    var snodeid = getSelectedNodeByKey(zTree,"organizationId");
                    var options = {
                        url: "${TINY_CONTEXT_PATH}/addOrganization.do",
                        type:"post",
                        data: {parentId:snodeid},
                        success:function(data){
                            $("#orgById").trigger("initnav");
                            $("#treeDemo").trigger("init");
                            $("form[name=thisform]").parents(".modal").find(".modal-header .close").trigger("click");
                        },error:function(){
                            alert('操作失败!');
                            $("form[name=thisform]").parents(".modal").find(".modal-header .close").trigger("click");
                        }
                    };
                    $(curform).ajaxSubmit(options);
                    return false;
                },
                callback: function (data) {
                    setTimeout(function () {
                        $.Hidemsg(); //公用方法关闭信息提示框;显示方法是$.Showmsg("message goes here.");
                    }, 1000);
                    //$.Hidemsg();
                    //$("form[name=thisform]").parents(".modal").find(".modal-header .close").trigger("click");
                    /*if (data.status == "y") {
                        setTimeout(function () {

                            $.Hidemsg(); //公用方法关闭信息提示框;显示方法是$.Showmsg("message goes here.");
                            $("form[name=thisform]").parents(".modal").find(".modal-header .close").trigger("click");
                        }, 2000);
                    }*/
                    //返回数据data是json对象，{"info":"demo info","status":"y"}
                    //info: 输出提示信息;
                    //status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在Validform_post.html文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;
                    //你也可以在Validform_post.html文件返回更多信息在这里获取，进行相应操作；
                    //ajax遇到服务端错误时也会执行回调，这时的data是{ status:**, statusText:**, readyState:**, responseText:** }；

                    //这里执行回调操作;
                    //注意：如果不是ajax方式提交表单，传入callback，这时data参数是当前表单对象，回调函数会在表单验证全部通过后执行，然后判断是否提交表单，如果callback里明确return false，则表单不会提交，如果return true或没有return，则会提交表单。
                }
            });
        });
    </script>